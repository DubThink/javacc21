/* Generated by: JavaCC 21 Parser Generator. Do not edit. OneOrMore.java */
package com.javacc.parser.tree;

import com.javacc.lexgen.TokenSet;
import com.javacc.parsegen.Expansion;
import com.javacc.parsegen.Lookahead;
import com.javacc.parser.*;
@SuppressWarnings("unused")
public class OneOrMore extends Expansion {
    private String label;
    public Lookahead getLookahead() {
        Expansion exp=getNestedExpansion();
        Lookahead lookahead=super.getLookahead();
        if (lookahead==null) {
            if (exp instanceof ExpansionSequence) {
                lookahead=((ExpansionSequence) exp).getLookahead();
            }
            else {
                lookahead=new Lookahead(exp);
                setLookahead(lookahead);
            }
        }
        return lookahead;
    }

    public Expansion getNestedExpansion() {
        return firstChildOfType(Expansion.class);
    }

    public boolean isPossiblyEmpty() {
        return getNestedExpansion().isPossiblyEmpty();
    }

    public TokenSet getFirstSet() {
        return getNestedExpansion().getFirstSet();
    }

    public TokenSet getFinalSet() {
        return getNestedExpansion().getFinalSet();
    }

    public boolean requiresPhase2Routine() {
        return getNestedExpansion().requiresPhase2Routine();
    }

    public int minimumSize(int min) {
        return getNestedExpansion().getMinimumSize();
    }

}
