/* Generated by: JavaCC 21 Parser Generator. Do not edit. ExpansionChoice.java */
package com.javacc.parser.tree;

import java.util.List;

import com.javacc.lexgen.TokenSet;
import com.javacc.parsegen.Expansion;
import com.javacc.parser.*;
@SuppressWarnings("unused")
public class ExpansionChoice extends Expansion {
    public List<Expansion>getChoices() {
        return childrenOfType(Expansion.class);
    }

    public TokenSet getFirstSet() {
        if (firstSet==null) {
            firstSet=new TokenSet(getGrammar());
            for (Expansion choice : getChoices()) {
                firstSet.or(choice.getFirstSet());
            }
        }
        return firstSet;
    }

    public TokenSet getFinalSet() {
        if (finalSet==null) {
            finalSet=new TokenSet(getGrammar());
            for (Expansion choice : getChoices()) {
                finalSet.or(choice.getFinalSet());
            }
        }
        return finalSet;
    }

    public boolean isPossiblyEmpty() {
        for (Expansion e : getChoices()) {
            if (e.isPossiblyEmpty()) {
                return true;
            }
        }
        return false;
    }

    public boolean requiresPhase2Routine() {
        for (Expansion choice : getChoices()) {
            if (choice.requiresPhase2Routine()) return true;
        }
        return false;
    }

    public int minimumSize(int min) {
        for (Expansion nestedExpansion : getChoices()) {
            if (min<=1) break;
            min=Math.min(min,nestedExpansion.minimumSize(min));
        }
        return min;
    }

}
