/* Generated by: JavaCC 21 Parser Generator. Do not edit. ClassOrInterfaceBody.java */
package com.javacc.parser.tree;

import java.util.*;

import com.javacc.parser.*;
@SuppressWarnings("unused")
public class ClassOrInterfaceBody extends BaseNode {
    public String getAsString() {
        return getInnerText();
    }

    public void prepend(List<ClassOrInterfaceBodyDeclaration>elements) {
        ListIterator<Node>iterator=iterator();
        Node n=null;
        while (iterator.hasNext()) {
            n=iterator.next();
            if (n instanceof Token) {
                Token t=(Token) n;
                if (t.getId()==LBRACE) {
                    break;
                }
            }
        }
        for (ClassOrInterfaceBodyDeclaration elem : elements) {
            iterator.add(elem);
            iterator.next();
        }
    }

    public void removeDuplicateMethods() {
        Set<String>sigs=new HashSet<String>();
        ListIterator<Node>decls=iterator();
        while (decls.hasNext()) {
            Node n=decls.next();
            if (n instanceof ClassOrInterfaceBodyDeclaration) {
                ClassOrInterfaceBodyDeclaration decl=(ClassOrInterfaceBodyDeclaration) n;
                String sig=decl.getFullNameSignatureIfMethod();
                if (sig!=null) {
                    if (sigs.contains(sig)) {
                        decls.remove();
                    }
                    else {
                        sigs.add(sig);
                    }
                }
            }
        }
    }

}
