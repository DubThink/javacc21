/* Generated by: ${generated_by}. ${filename} */
[#if grammar.parserPackage?has_content]
package ${grammar.parserPackage};
[/#if]

/**
 * Token subclass to represent lexically invalid input
 */
 
public class InvalidToken extends Token {

[#if grammar.options.hugeFileSupport || grammar.options.userDefinedLexer]
    public InvalidToken(String image, String inputSource) {
       super(TokenType.INVALID, image, inputSource);
    }
[#else]
    public InvalidToken(String image, FileLineMap inputSource) {
       super(TokenType.INVALID, image, inputSource);
    }
[/#if]    
/*    
    public InvalidToken() {
       super(TokenType.INVALID, null, "input");
    }
*/        
    public String getNormalizedText() {
        return "Lexically Invalid Input:" + getImage();
    }
    
    public boolean isDirty() {
        return true;
    }
}
