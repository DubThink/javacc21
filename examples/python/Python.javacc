/*
 * Unfinished work on a Python grammar. I am working from the information in
 * following two web pages:
 * https://docs.python.org/3/reference/grammar.html
 * https://docs.python.org/3/reference/lexical_analysis.html#indentation
 * This is Python 3.9.5, which I presume is the latest spec. 
 * (I do not anticipate supporting any older versions of the language.)
 */

PARSER_PACKAGE = org.parsers.python;
NODE_PACKAGE = org.parsers.python.ast;
DEFAULT_LEXICAL_STATE = PYTHON;
TABS_TO_SPACES=8;
PRESERVE_LINE_ENDINGS=false;

UNPARSED : 
   <WHITESPACE : (" "| "\n"| "\f")+> #Whitespace
   |
   <COMMENT: "#" (~["\n"])* "\n" > #Comment  
;

INCLUDE "PythonIdentifierDef.javacc"

TOKEN :
  <NAME : <PYTHON_IDENTIFIER_START> (<PYTHON_IDENTIFIER_PART>)* > #Name
;

TOKEN #Delimiter :
   <ASSIGN : "=">
   |
   <COLON : ":" >
   |
   <COMMA : ",">
   |
   <LBRACE: "{" > 
   | 
   <RBRACE: "}" > 
   |
   <LBRACKET : "[">
   |
   <RBRACKET : "]">
   |
   <LPAREN : "(">
   |
   <RPAREN : ")" >
   |
   <SEMICOLON : ";">
   |
   <STAR : "*"> 
   |
   <STAR_STAR : "**">
;

TOKEN #Operator :
   <AT : "@">
   |
   <BIT_AND : "&">
   |
   <BIT_OR : "|">
   |
   <XOR : "^">
   |
   <TILDE : "~">
   |
   <COLONEQUALS : ":=">
   |
   <DOT : ".">
   |
   <ELLIPSIS : "...">
   |
   <EQ : "==">
   | 
   <LE: "<=" > 
   | 
   <GE: ">=" > 
   | 
   <NE: "!=" > 
   |
   <GT: ">" > 
   | 
   <LT: "<" > 
   |
   <MINUS : "-">
   |
   <PLUS : "+">
   |
   <SLASH : "/">
   |
   <PERCENT : "%">
   |
   <MINUSASSIGN : "-=">
   |
   <PLUSASSIGN : "+=">
   |
   <STARASSIGN : "*=">
   |
   <ATASSIGN : "@=">
   |
   <SLASHASSIGN : "/=">
   |
   <REMASSIGN : "%=">
   |
   <ANDASSIGN : "&=">
   |
   <ORASSIGN : "|=">
   |
   <XORASSIGN : "^=">
   |
   <LSHIFT : "<<">
   |
   <RSHIFT : ">>">
   |
   <LSHIFTASSIGN : "<<=">
   |
   <RSHIFTASSIGN : ">>=">
   |
   <STARSTARASSIGN : "**=">
   |
   <SLASHSLASHASSIGN : "//=">
   |
   <RARROW : "->">
   |
   <HOOK : "? ">
;

TOKEN #Keyword :
   <AND : "and">
   |
   <AS : "as">
   |
   <_ASSERT : "assert">
   |
   <ASYNC : "asynch">
   |
   <AWAIT : "await">
   |
   <BREAK : "break">
   |
   <CLASS : "class">
   |
   <CONTINUE : "continue">
   |
   <DEF : "def">
   |
   <DEL : "del">
   |
   <EXCEPT : "except">
   |
   <FINALLY : "finally">
   |
   <FOR : "for">
   |
   <FROM : "from">
   |
   <GLOBAL : "global">
   |
   <IF : "if">
   |
   <IN : "in">
   |
   <IS : "is">
   |
   <ELIF : "elif">
   |
   <ELSE : "else">
   |
   <FALSE : "False">
   |
   <IMPORT : "import">
   |
   <LAMBDA : "lambda">
   |
   <NONLOCAL : "nonlocal">
   |
   <NONE : "None">
   |
   <NOT : "not">
   |
   <OR : "or">
   |
   <PASS : "pass">
   |
   <PEG_PARSER : "__peg_parser__">
   |
   <RAISE : "raise">
   |
   <RETURN : "return">
   |
   <TRUE : "True">   
   |
   <TRY : "try">
   |
   <WHILE : "while">
   |
   <WITH : "with">
   |
   <YIELD : "yield">
;   

// The following is lifted from the Pydev code. See:
// https://github.com/fabioz/Pydev/blob/master/plugins/org.python.pydev.parser/src/org/python/pydev/parser/grammar38/python.jjt#L392-L411
// I think this is fair use. I don't anticipate anybody complaining. Besides, they most likely lifted this 
// from somewhere else!
TOKEN #NumericalLiteral : 
    <DECNUMBER:
        ["1"-"9"] ((["_"])?["0"-"9"])* (["l", "L"])?
      | "0"
      >
    |   
    <HEXNUMBER: "0" ["x","X"] ((["_"])? ["0"-"9","a"-"f","A"-"F"])+ (["l","L"])? >
    |   
    <OCTNUMBER: "0" ["o","O"] ((["_"])? ["0"-"7"])* (["l","L"])? >
    |   
    <BINNUMBER: "0" (["b","B"])? ((["_"])? ["0"-"1"])* (["l","L"])? >
    |
    <FLOAT:
        ["0"-"9"]((["_"])?["0"-"9"])* "." ((["_"])?["0"-"9"])* (<EXPONENT>)?
      | "." ["0"-"9"]((["_"])?["0"-"9"])* (<EXPONENT>)?
      | ["0"-"9"]((["_"])?["0"-"9"])* <EXPONENT>
      >
    |
    <COMPLEX: (<DECNUMBER> | <FLOAT> | "0" <DECNUMBER> ) ["j", "J"]>
    |
    <#EXPONENT: ["e","E"] (["+","-"])? ["0"-"9"]((["_"])?["0"-"9"])* >
    |   
    <#DIGIT: ["0" - "9"] >
;

Number#void : <HEXNUMBER> | <BINNUMBER> | <OCTNUMBER> | <DECNUMBER> | <FLOAT> | <COMPLEX> ;



